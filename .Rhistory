sum <- -120
for (i in 1:10) (sum = sum + 1)
sum
knitr::opts_chunk$set(echo = TRUE)
if(!require(googlesheets4)){
install.packages("googlesheets4")
library(googlesheets4)
}
gs4_deauth()
form <- "https://docs.google.com/spreadsheets/d/1BctPP-J7X2qz6bm6QTCVDAZDNS3l37G9godqdfIng0Q/edit#gid=752027602"
data <- NULL
data <- data.frame(read_sheet(form))
# membuang timestamp
data <- data[,-1]
# membuang pertanyaan x1-18 yang double
data <- data[,-20]
# Mengganti nama variabel x1 : kolom 2 - 22
colnames(data)[2:22] <- paste0("x1-",1:21)
# Mengganti nama variabel x2 : kolom 35 - 56
colnames(data)[35:56] <- paste0("x2-",1:22)
# Mengganti nama variabel x3 : kolom 23 - 34
colnames(data)[23:34] <- paste0("x3-",1:12)
# Mengganti nama variabel y1 : kolom 57 - 68
colnames(data)[57:68] <- paste0("y1-",1:12)
# Mengganti nama variabel y2 : kolom 69 - 79
colnames(data)[69:79] <- paste0("y2-",1:11)
# Konversi jawaban ke angka 1 hingga 5
for (i in 2:ncol(data)){
data[,i] <- sapply(data[,i], switch,
"Sangat Setuju" = 5,
"Setuju" = 4,
"Ragu-ragu" = 3,
"Tidak Setuju" = 2,
"Sangat Tidak Setuju" = 1)
}
names(data)
dim(data)
if(!require(psych)){
install.packages("psych")
library(psych)
}
set.seed(1234)
acak <- sample(1:nrow(data), 30) # memilih 30 responden secara acak
data_30 <- data[acak,]
x1 <- data_30[,2:22]
x3 <- data_30[,23:34]
x2 <- data_30[,35:56]
y1 <- data_30[,57:68]
y2 <- data_30[,69:79]
x1
x2
x3
y1
y2
ax1 <- alpha(x1, check.keys = T)
ax1
ax1 <- alpha(x1, check.keys = T)
ax1
str(x1)
alpha(x2, check.keys = T)
alpha(y1, check.keys = T)
alpha(y2, check.keys = T)
if(!require(psych)){
install.packages("psych")
library(psych)
}
set.seed(123)
acak <- sample(1:nrow(data), 30) # memilih 30 responden secara acak
data_30 <- data[acak,]
x1 <- data_30[,2:22]
x3 <- data_30[,23:34]
x2 <- data_30[,35:56]
y1 <- data_30[,57:68]
y2 <- data_30[,69:79]
ax1 <- alpha(x1, check.keys = T)
ax1
alpha(x2, check.keys = T)
data
x11 <- apply(data[, 2:6], 1, mean)
x12 <- apply(data[, 7:11], 1, mean)
x13 <- apply(data[, 12:17], 1, mean)
x14 <- apply(data[, 17:21], 1, mean)
x14
data
names(x2)
x11 <- apply(data[, 2:6], 1, mean)
x12 <- apply(data[, 7:11], 1, mean)
x13 <- apply(data[, 12:17], 1, mean)
x14 <- apply(data[, 17:21], 1, mean)
x21 <- apply(data[, 35:40], 1, mean)
x22 <- apply(data[, 41:44], 1, mean)
x23 <- apply(data[, 45:49], 1, mean)
x24 <- apply(data[, 50:53], 1, mean)
x25 <- apply(data[, 54:56], 1, mean)
x31 <- apply(data[, 23:26], 1, false)
x11 <- apply(data[, 2:6], 1, mean)
x12 <- apply(data[, 7:11], 1, mean)
x13 <- apply(data[, 12:17], 1, mean)
x14 <- apply(data[, 17:21], 1, mean)
x21 <- apply(data[, 35:40], 1, mean)
x22 <- apply(data[, 41:44], 1, mean)
x23 <- apply(data[, 45:49], 1, mean)
x24 <- apply(data[, 50:53], 1, mean)
x25 <- apply(data[, 54:56], 1, mean)
x31 <- apply(data[, 23:26], 1, mean)
x32 <- apply(data[, 27:30], 1, mean)
x33 <- apply(data[, 31:34], 1, mean)
y11 <- apply(data[, 57:60], 1, mean)
y12 <- apply(data[, 61:64], 1, mean)
y13 <- apply(data[, 65:68], 1, mean)
y21 <- apply(data[, 69:70], 1, mean)
y22 <- apply(data[, 71:73], 1, mean)
y23 <- apply(data[, 74:76], 1, mean)
y24 <- apply(data[, 77:79], 1, mean)
x11
ax1 <- alpha(x1, check.keys = T)
ax1
ax1$scores
ax1$alpha.drop
if(!require(psych)){
install.packages("psych")
library(psych)
}
set.seed(123)
acak <- sample(1:nrow(data), 30) # memilih 30 responden secara acak
data_30 <- data[acak,]
ax1$total
ax1$total$raw_alpha
alpha(x1, check.keys = T)
ax1$alpha.drop
ax1$alpha.drop$raw_alpha
ax1$alpha.drop$raw_alpha[2]
ax1$alpha.drop[1,1]
ax1$alpha.drop[2,1]
rownnames(ax1)
rownames(ax1)
rownames(ax1$alpha.drop)
ncol(x1)
ax1$total
rownames(ax1$alpha.drop[1])
rownames(ax1$alpha.drop[2])
rownames(ax1$alpha.drop[1,])
invalid <- NULL
for (i in (1:ncol(x1))) {
if (ax1$alpha.drop[i,1] < ax1$total$raw_alpha) {
invalid <- c(invalid, rownames(ax1$alpha.drop[i,]))
}
}
invalid
invalid <- NULL
for (i in (1:ncol(x1))) {
if (ax1$alpha.drop[i,1] > ax1$total$raw_alpha) {
invalid <- c(invalid, rownames(ax1$alpha.drop[i,]))
}
}
invalid
ax2 <- alpha(x2, check.keys = T)
ax2
invalid <- NULL
for (i in (1:ncol(x1))) {
if (ax2$alpha.drop[i,1] > ax2$total$raw_alpha) {
invalid <- c(invalid, rownames(ax2$alpha.drop[i,]))
}
}
invalid
ax3 <- alpha(x3, check.keys = T)
ax3
invalid <- NULL
for (i in (1:ncol(x3))) {
if (ax3$alpha.drop[i,1] > ax3$total$raw_alpha) {
invalid <- c(invalid, rownames(ax3$alpha.drop[i,]))
}
}
invalid
ax2 <- alpha(x2, check.keys = T)
ax2
invalid <- NULL
for (i in (1:ncol(x2))) {
if (ax2$alpha.drop[i,1] > ax2$total$raw_alpha) {
invalid <- c(invalid, rownames(ax2$alpha.drop[i,]))
}
}
invalid
ay1 <- alpha(y1, check.keys = T)
ay1
invalid <- NULL
for (i in (1:ncol(y1))) {
if (ay1$alpha.drop[i,1] > ay1$total$raw_alpha) {
invalid <- c(invalid, rownames(ay1$alpha.drop[i,]))
}
}
invalid
ay2 <- alpha(y2, check.keys = T)
ay2
invalid <- NULL
for (i in (1:ncol(y2))) {
if (ay2$alpha.drop[i,1] > ay2$total$raw_alpha) {
invalid <- c(invalid, rownames(ay2$alpha.drop[i,]))
}
}
invalid
names(y2)
rt(10,5)
curve(dnorm(x), from = -5, to 5)
curve(dnorm(100), from = -5, to 5)
curve(dnorm(x), from = -5, to = 5)
curve(dt(x), from = -5, to = 5)
curve(dt(x, 10), from = -5, to = 5)
curve(dnorm(x), from = -5, to = 5)
library(semPlot)
semPlot::semSyntax()
?semPaths
# A silly dataset:
X <- rnorm(100)
Y <- rnorm(100)
Z <- rnorm(1)*X + rnorm(1)*Y + rnorm(1)*X*Y
DF <- data.frame(X,Y,Z)
# Regression including interaction:
res <- lm(Z ~ X*Y, data = DF)
# Path diagram:
semPaths(res, intAtSide=TRUE)
# Standardized estimates:
semPaths(res,"std","hide", intAtSide=TRUE)
# Simple CFA -------------------------------------------
library("lavaan")
example(cfa)
semPaths(fit, 'std', 'est', curveAdjacent = TRUE, style = "lisrel")
# MIMIC model ----------------------------------------------------
## Lavaan
## Not run:
library("lavaan")
# Example 5.8 from mplus user guide:
Data <- read.table("http://www.statmodel.com/usersguide/chap5/ex5.8.dat")
# Run Lavaan:
library("lavaan")
fit <- lavaan:::cfa(model.Lavaan, data=Data, std.lv=TRUE)
# Example 5.8 from mplus user guide:
Data <- read.table("http://www.statmodel.com/usersguide/chap5/ex5.8.dat")
Data
names(Data) <- c(paste("y", 1:6, sep=""),
paste("x", 1:3, sep=""))
# Model:
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f1 + f2 ~ x1 + x2 + x3 '
# Run Lavaan:
library("lavaan")
fit <- lavaan:::cfa(model.Lavaan, data=Data, std.lv=TRUE)
# Plot path diagram:
semPaths(fit,title=FALSE)
# Omit exogenous covariances:
semPaths(fit,title=FALSE, exoVar = FALSE, exoCov = FALSE)
# Standardized parameters:
semPaths(fit,"std", edge.label.cex = 0.5, exoVar = FALSE,
exoCov = FALSE)
# Same model, now using mplus output:
outfile <- tempfile(fileext=".out")
download.file("http://www.statmodel.com/usersguide/chap5/ex5.8.html",outfile)
# Plot model:
semPaths(outfile,intercepts=FALSE)
# Example 5.8 from mplus user guide:
Data <- read.table("http://www.statmodel.com/usersguide/chap5/ex5.2.dat")
names(Data) <- c("u1","u2","u3","u4","u5","u6")
Data <- as.data.frame(lapply(Data, ordered))
# Lavaan model:
model <- ' f1 =~ u1 + u2 + u3; f2 =~ u4 + u5 + u6 '
# Run Lavaan:
fit <- lavaan::cfa(model, data=Data)
# Plot path diagram:
semPaths(fit,intercepts=FALSE)
# Same model, now using mplus output:
outfile <- tempfile(fileext=".out")
download.file("http://www.statmodel.com/usersguide/chap5/ex5.2.html",outfile)
# Plot model:
semPaths(outfile)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. Wake up']
rec2 [label = 'Step 2. Write code']
rec3 [label =  'Step 3. Making Love']
rec4 [label = 'Step 4. PROFIT']
rec5 [label = 'Langkah 5. Menjemput Impian']
rec6 [label = 'Langkah 6. Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. Write code']
rec3 [label =  'Step 3. Making Love']
rec4 [label = 'Step 4. PROFIT']
rec5 [label = 'Langkah 5. Menjemput Impian']
rec6 [label = 'Langkah 6. Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec4 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec1 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec1 -> rec5 -> rec6 rec4
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec1 -> rec5 -> rec6 -> rec4
}")
update.packages(ask = F, checkBuilt = T)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec1 -> rec5 -> rec6 -> rec4
}")
library(dplyr)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length * Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Length * Sepal.Width),
Mean.Petal.Area = mean(Petal.Length * Petal.Width))
reticulate::repl_python()
import numpy as np
from matplotlib import pyplot as plt
print(2+2)
exit
sum(1:10)
sum(1:100)
_a <- 50
setwd("G:/My Drive/#PMB/2023/01_SNBP/23snbp")
library(readxl)
db <- read_excel("snbp.xlsx")
peminat <- read_excel("peminat SNBP 2023.xlsx")
library(tidyverse)
data <- db %>%
group_by(fakultas, prodi, kode_prodi) %>%
summarize(lulus = n(),
sudah = sum(registrasi == "registrasi", na.rm = T),
belum = lulus - sudah,
diterima = sum(nim == "diterima", na.rm = T))
data <- data %>%
left_join(peminat[,c(2,3,11)], by = c("kode_prodi" = "kode")) %>%
arrange(fakultas, desc(jenjang))
data
data <- data[, c(-1,-3)]
data <- adorn_totals(data,where = "row", name = "Total")
data$pers_sudah <- round(data$sudah / data$lulus * 100, 0)
library(janitor)
data <- db %>%
group_by(fakultas, prodi, kode_prodi) %>%
summarize(lulus = n(),
sudah = sum(registrasi == "registrasi", na.rm = T),
belum = lulus - sudah,
diterima = sum(nim == "diterima", na.rm = T))
data <- data %>%
left_join(peminat[,c(2,3,11)], by = c("kode_prodi" = "kode")) %>%
arrange(fakultas, desc(jenjang))
data <- data[, c(-1,-3)]
data <- adorn_totals(data,where = "row", name = "Total")
data$pers_sudah <- round(data$sudah / data$lulus * 100, 0)
data$pers_belum <- round(data$belum / data$lulus * 100, 0)
data$pers_lulus <- round(data$lulus / data$minat * 100, 0)
data <- data %>%
select(prodi, jenjang, minat, lulus, pers_lulus, sudah, belum, pers_sudah, pers_belum, diterima)
data
head(data)
data <- db %>%
group_by(fakultas, prodi, kode_prodi) %>%
summarize(lulus = n(),
sudah = sum(registrasi == "registrasi", na.rm = T),
belum = lulus - sudah,
diterima = sum(nim == "diterima", na.rm = T))
data <- data %>%
left_join(peminat[,c(2,3,11)], by = c("kode_prodi" = "kode")) %>%
arrange(fakultas, desc(jenjang))
data <- data[, c(-1,-3)]
data <- adorn_totals(data,where = "row", name = "Total")
data$pers_sudah <- round(data$sudah / data$lulus * 100, 0)
data$pers_belum <- round(data$belum / data$lulus * 100, 0)
data$pers_lulus <- round(data$lulus / data$minat * 100, 0)
data <- data %>%
select(prodi, jenjang, minat, lulus, pers_lulus, sudah, belum, pers_sudah, pers_belum, diterima)
data <- db %>%
group_by(fakultas, prodi, kode_prodi) %>%
summarize(lulus = n(),
sudah = sum(registrasi == "registrasi", na.rm = T),
belum = lulus - sudah,
diterima = sum(nim == "diterima", na.rm = T))
data <- data %>%
left_join(peminat[,c(2,3,11)], by = c("kode_prodi" = "kode")) %>%
arrange(fakultas, desc(jenjang))
data <- data[, c(-1,-3)]
View(data)
data <- db %>%
group_by(fakultas, prodi, kode_prodi) %>%
summarize(lulus = n(),
sudah = sum(registrasi == "registrasi", na.rm = T),
belum = lulus - sudah,
diterima = sum(nim == "diterima", na.rm = T))
data <- data %>%
left_join(peminat[,c(2,3,11)], by = c("kode_prodi" = "kode")) %>%
arrange(fakultas, desc(jenjang))
data %>% group_by(jenjang) %>% summarise(minat = sum(minat))
names(data)
data <- db %>%
group_by(fakultas, prodi, kode_prodi) %>%
summarize(lulus = n(),
sudah = sum(registrasi == "registrasi", na.rm = T),
belum = lulus - sudah,
diterima = sum(nim == "diterima", na.rm = T))
data <- data %>%
left_join(peminat[,c(2,3,11)], by = c("kode_prodi" = "kode")) %>%
arrange(fakultas, desc(jenjang))
data <- data %>%
group_by(jenjang) %>%
summarise(minat = sum(minat),
lulus = sum(lulus),
sudah = sum(suda),
belum = sum(belum),
diterima = sum(diterima))
data <- data %>%
group_by(jenjang) %>%
summarise(minat = sum(minat),
lulus = sum(lulus),
sudah = sum(sudah),
belum = sum(belum),
diterima = sum(diterima))
data
data <- adorn_totals(data,where = "row", name = "Total")
data
data$pers_sudah <- round(data$sudah / data$lulus * 100, 0)
data$pers_belum <- round(data$belum / data$lulus * 100, 0)
data$pers_lulus <- round(data$lulus / data$minat * 100, 0)
data
data <- data %>%
select(jenjang, minat, lulus, pers_lulus, sudah, belum, pers_sudah, pers_belum, diterima)
data
names(data) <- c("Jenjang", "Peminat", "Lulus", "% Lulus", "Sudah", "Belum", "Sudah (%)", "Belum (%)", "Diterima")
data
kable(data, row.names = F) %>%
kable_styling(bootstrap_options = "striped", full_width = F,
latex_options = "scale_down") %>%
add_header_above(c(" " = 4, "Registrasi" = 4, " " = 1))
library(kableExtra)
kable(data, row.names = F) %>%
kable_styling(bootstrap_options = "striped", full_width = F,
latex_options = "scale_down") %>%
add_header_above(c(" " = 4, "Registrasi" = 4, " " = 1))
